{"ast":null,"code":"var _jsxFileName = \"/Users/yogita/Desktop/react_js/codingal/src/components/Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = ({\n  hoursMinSecs\n}) => {\n  _s();\n\n  const {\n    hours = 0,\n    minutes = 0,\n    seconds = 60\n  } = hoursMinSecs;\n  const [[hrs, mins, secs], setTime] = React.useState([hours, minutes, seconds]);\n\n  const tick = () => {\n    if (hrs === 0 && mins === 0 && secs === 0) reset();else if (mins === 0 && secs === 0) {\n      setTime([hrs - 1, 59, 59]);\n    } else if (secs === 0) {\n      setTime([hrs, mins - 1, 59]);\n    } else {\n      setTime([hrs, mins, secs - 1]);\n    }\n  };\n\n  const reset = () => setTime([parseInt(hours), parseInt(minutes), parseInt(seconds)]);\n\n  React.useEffect(() => {\n    const timerId = setInterval(() => tick(), 1000);\n    return () => clearInterval(timerId);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${hrs.toString().padStart(2, '0')}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Timer, \"DVXaHqmU+ZoPj3P+WV54vBIJMR4=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/yogita/Desktop/react_js/codingal/src/components/Timer.jsx"],"names":["React","Timer","hoursMinSecs","hours","minutes","seconds","hrs","mins","secs","setTime","useState","tick","reset","parseInt","useEffect","timerId","setInterval","clearInterval","toString","padStart"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AAAA;;AAE9B,QAAM;AAAEC,IAAAA,KAAK,GAAG,CAAV;AAAaC,IAAAA,OAAO,GAAG,CAAvB;AAA0BC,IAAAA,OAAO,GAAG;AAApC,MAA2CH,YAAjD;AACA,QAAM,CAAC,CAACI,GAAD,EAAMC,IAAN,EAAYC,IAAZ,CAAD,EAAoBC,OAApB,IAA+BT,KAAK,CAACU,QAAN,CAAe,CAACP,KAAD,EAAQC,OAAR,EAAiBC,OAAjB,CAAf,CAArC;;AAGA,QAAMM,IAAI,GAAG,MAAM;AAEf,QAAIL,GAAG,KAAK,CAAR,IAAaC,IAAI,KAAK,CAAtB,IAA2BC,IAAI,KAAK,CAAxC,EACII,KAAK,GADT,KAEK,IAAIL,IAAI,KAAK,CAAT,IAAcC,IAAI,KAAK,CAA3B,EAA8B;AAC/BC,MAAAA,OAAO,CAAC,CAACH,GAAG,GAAG,CAAP,EAAU,EAAV,EAAc,EAAd,CAAD,CAAP;AACH,KAFI,MAEE,IAAIE,IAAI,KAAK,CAAb,EAAgB;AACnBC,MAAAA,OAAO,CAAC,CAACH,GAAD,EAAMC,IAAI,GAAG,CAAb,EAAgB,EAAhB,CAAD,CAAP;AACH,KAFM,MAEA;AACHE,MAAAA,OAAO,CAAC,CAACH,GAAD,EAAMC,IAAN,EAAYC,IAAI,GAAG,CAAnB,CAAD,CAAP;AACH;AACJ,GAXD;;AAcA,QAAMI,KAAK,GAAG,MAAMH,OAAO,CAAC,CAACI,QAAQ,CAACV,KAAD,CAAT,EAAkBU,QAAQ,CAACT,OAAD,CAA1B,EAAqCS,QAAQ,CAACR,OAAD,CAA7C,CAAD,CAA3B;;AAGAL,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AAClB,UAAMC,OAAO,GAAGC,WAAW,CAAC,MAAML,IAAI,EAAX,EAAe,IAAf,CAA3B;AACA,WAAO,MAAMM,aAAa,CAACF,OAAD,CAA1B;AACH,GAHD;AAMA,sBACI;AAAA,2BACI;AAAA,gBAAK,GAAET,GAAG,CAACY,QAAJ,GAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAAgC,IAAGZ,IAAI,CAC7CW,QADyC,GAEzCC,QAFyC,CAEhC,CAFgC,EAE7B,GAF6B,CAExB,IAAGX,IAAI,CAACU,QAAL,GAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,CAAiC;AAFtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CApCD;;GAAMlB,K;;KAAAA,K;AAsCN,eAAeA,KAAf","sourcesContent":["import React from 'react'\nconst Timer = ({hoursMinSecs}) => {\n   \n    const { hours = 0, minutes = 0, seconds = 60 } = hoursMinSecs;\n    const [[hrs, mins, secs], setTime] = React.useState([hours, minutes, seconds]);\n    \n\n    const tick = () => {\n   \n        if (hrs === 0 && mins === 0 && secs === 0) \n            reset()\n        else if (mins === 0 && secs === 0) {\n            setTime([hrs - 1, 59, 59]);\n        } else if (secs === 0) {\n            setTime([hrs, mins - 1, 59]);\n        } else {\n            setTime([hrs, mins, secs - 1]);\n        }\n    };\n\n\n    const reset = () => setTime([parseInt(hours), parseInt(minutes), parseInt(seconds)]);\n\n    \n    React.useEffect(() => {\n        const timerId = setInterval(() => tick(), 1000);\n        return () => clearInterval(timerId);\n    });\n\n    \n    return (\n        <div>\n            <p>{`${hrs.toString().padStart(2, '0')}:${mins\n            .toString()\n            .padStart(2, '0')}:${secs.toString().padStart(2, '0')}`}</p> \n        </div>\n    );\n}\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}