{"ast":null,"code":"var _jsxFileName = \"/Users/yogita/Desktop/react_js/codingal/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { Switch, Route } from 'react-router-dom';\nimport Dropdown from './components/Dropdown';\nimport Post from './components/Post'; // import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n// import \"../node_modules/bootstrap/dist/js/bootstrap.bundle\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    const hideMenu = () => {\n      if (window.innerWidth > 768 && isOpen) {\n        setIsOpen(false);\n        console.log('i resized');\n      }\n    };\n\n    window.addEventListener('resize', hideMenu);\n    return () => {\n      window.removeEventListener('resize', hideMenu);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      isOpen: isOpen,\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/post\",\n        component: Post,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yogita/Desktop/react_js/codingal/src/App.js"],"names":["React","useState","useEffect","Navbar","Switch","Route","Dropdown","Post","App","isOpen","setIsOpen","toggle","hideMenu","window","innerWidth","console","log","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CACA;AACA;;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMU,MAAM,GAAG,MAAM;AACnBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAGAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,QAAQ,GAAG,MAAM;AACrB,UAAIC,MAAM,CAACC,UAAP,GAAoB,GAApB,IAA2BL,MAA/B,EAAuC;AACrCC,QAAAA,SAAS,CAAC,KAAD,CAAT;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACF,KALD;;AAMAH,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCL,QAAlC;AAEA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCN,QAArC;AACD,KAFD;AAGD,GAZQ,CAAT;AAaA,sBACE;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEF,MAAlB;AAA0B,MAAA,MAAM,EAAEE;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAEJ,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAWD;;GA7BQC,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport {Switch, Route} from 'react-router-dom'\nimport Dropdown from './components/Dropdown';\nimport Post from './components/Post'\n// import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n// import \"../node_modules/bootstrap/dist/js/bootstrap.bundle\"\n\nfunction App() {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n  useEffect(() => {\n    const hideMenu = () => {\n      if (window.innerWidth > 768 && isOpen) {\n        setIsOpen(false);\n        console.log('i resized');\n      }\n    };\n    window.addEventListener('resize', hideMenu);\n\n    return () => {\n      window.removeEventListener('resize', hideMenu);\n    };\n  });\n  return (\n    <>\n     <Navbar toggle={toggle} />\n     <Dropdown isOpen={isOpen} toggle={toggle} />\n      <Dropdown/>\n      <Switch>\n        <Route path=\"/post\" component={Post}>Post</Route>\n      </Switch>\n\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}